@startuml
class Token {
    -name: string
    -address: string
    -balance: BigNumber
    -decimals: BigNumber
    +getTokenDecimalBalance(): BigNumber
    +setTokenDecimalBalance(tokenDecimalBalance: BigNumber): void
    +getEncodedTokenData: () => string
    +getName(): string
    +setName(name: string): void
    +getAddress(): string
    +setAddress(address: string): void
    +getBalance(): BigNumber
    +getBalanceAsNumber(): number
    +setBalance(balance: BigNumber): void
    +getDecimals(): BigNumber
    +setDecimals(decimals: BigNumber): void
}
class Shell {
    -tokenArray: Token[]
    +getBalance(): BigNumber
    +getOverlappedShell(otherShell: Shell): Shell
    +getTokenAddresses(): string[]
    +getAddressToValueMap(): Map<string, BigNumber>
    +getSortedTokenArray(): Token[]
    +setTokenArray(tokenArray: Token[]): void
    +getTokenArray(): Token[]
}
class User {
    -address: string
    -shell: Shell
    +getAddress(): string
    +setAddress(address: string): void
    +getShell(): Shell
    +setShell(shell: Shell): void
}
class Order {
    -signedOrder: SignedOrder
    +createOrder(senderUser: User, receiverUser: User, amount: BigNumber): Promise<SignedOrder>
    +listOrder(): Promise<string>
    +bidOrder(): Promise<string>
    +makeOrder(): Promise<string>
    +takeOrder(): Promise<string>
}
@enduml